apiVersion: v1
kind: Namespace
metadata:
  name: another-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: another-app-deployment
  namespace: another-app
spec:
  selector:
    matchLabels:
      app: anotherApp
  replicas: 2
  template:
    metadata:
      labels:
        app: anotherApp
    spec:
      containers:
        - name: another-app-container
          imagePullPolicy: Always
          image: 'nginx:1.16.1'
          # image: '388412347424.dkr.ecr.us-east-1.amazonaws.com/another-app-repo-ecr:Dockerizing-latest'
          ports:
          - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: another-app-cluster-ip
  namespace: another-app
spec:
  type: ClusterIP
  selector:
    app: anotherApp
  ports:
    - port: 80         # Used for service-to-service comminication.
      targetPort: 80   # The EXPOSE port of container
      # nodePort: 32100
---      
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: another-app
  name: another-app-ingress
  # another-app-ingress.another-app.svc.cluster.local
  annotations:
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: 'at.hn.com'
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: another-app-cluster-ip
                port:
                  number: 80                             
