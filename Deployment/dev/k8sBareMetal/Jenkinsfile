pipeline {
    agent { label 'slave-ec2-fleet' }

    parameters {
        string(name: 'image', defaultValue: 'helloNode:latest', description: 'Please provide image for deployment')
        string(name: 'kubectlVersion', defaultValue: 'v1.22.0', description: 'Version of kubectl')
    }        
    environment {
        nameSpace = "hello-node"
    }
    stages {    

        stage('Installing KubeCtl') {
            steps {
                echo "Installing Kubectl Version $kubectlVersion"
                sh """
                    curl -LO https://dl.k8s.io/release/$kubectlVersion/bin/linux/amd64/kubectl
                    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
                    chmod +x kubectl
                    mkdir -p ~/.local/bin
                    mv ./kubectl ~/.local/bin/kubectl
                    export PATH=~/.local/bin:$PATH
                    source ~/.bash_profile

                    kubectl version --client
                """
            }      
        }

        stage('Setting KubeConfig') {
            steps {
                echo "copying kubeconfig from S3"
                sh """
                    aws s3 cp "s3://hello-node-repo-bucket/BareMetalK8sCluster/Master/kubeconfig" .
                    kubectl config view --kubeconfig=kubeconfig                  
                """
            }      
        }
        stage('Install/Update Nginx-Ingress') {
           
            steps {
                sh """
                    helm version
                    sudo chmod 777 /home/ec2-user/.config/helm/repositories.lock                        
                    helm repo add stable https://charts.helm.sh/stable
                    helm repo update
                    sudo chmod -R 777 /home/ec2-user/.cache/helm/repository
                    
                    helm upgrade --install hn-nginx --debug stable/nginx-ingress --set rbac.create=true                    

                """
                }
        }

        stage('Hello Node Deployment') {
           
            steps {
                sh """
                    kubectl create -f Deployment/dev/k8sBareMetal/helloNode/HNnamespance.yaml --kubeconfig=kubeconfig   
                    kubectl apply -f Deployment/dev/k8sBareMetal/helloNode --kubeconfig=kubeconfig   
                """
                }
        } 
        
    } 
}

